<#macro CacheType type>
  <#switch type>
  <#case "A">Project Ape<#break>
  <#case "B">Letterbox Hybrid<#break>
  <#case "C">Cache In Trash Out Event<#break>
  <#case "E">Event Cache<#break>
  <#case "G">BenchMark<#break>
  <#case "I">Wherigo Cache<#break>
  <#case "L">Locationless (Reverse) Cache<#break>
  <#case "M">Multi-cache<#break>
  <#case "O">Other<#break>
  <#case "R">Earthcache<#break>
  <#case "T">Traditional Cache<#break>
  <#case "U">Unknown Cache<#break>
  <#case "V">Virtual Cache<#break>
  <#case "W">Webcam Cache<#break>
  <#case "X">Maze Exhibit<#break>
  <#case "Y">Waymark<#break>
  <#case "Z">Mega-Event Cache<#break>
  <#default>Not supported
</#switch>
</#macro>

<#macro truefalse bool>
<#if bool = 0>false<#else>true</#if></#macro>

<#macro attr value>
<#switch value>
  <#case  "1">Dogs<#break>
  <#case  "2">Access or parking fee<#break>
  <#case  "3">Climbing gear<#break>
  <#case  "4">Boat<#break>
  <#case  "5">Scuba gear<#break>
  <#case  "6">Recommended for kids<#break>
  <#case  "7">Takes less than an hour<#break>
  <#case  "8">Scenic view<#break>
  <#case  "9">Significant Hike<#break>
  <#case "10">Difficult climbing<#break>
  <#case "11">May require wading<#break>
  <#case "12">May require swimming<#break>
  <#case "13">Available at all times<#break>
  <#case "14">Recommended at night<#break>
  <#case "15">Available during winter<#break>
  <#case "17">Poisonous plants<#break>
  <#case "18">Dangerous Animals<#break>
  <#case "19">Ticks<#break>
  <#case "20">Abandoned mines<#break>
  <#case "21">Cliff / falling rocks<#break>
  <#case "22">Hunting<#break>
  <#case "23">Dangerous area<#break>
  <#case "24">Wheelchair accessible<#break>
  <#case "25">Parking available<#break>
  <#case "26">Public transportation<#break>
  <#case "27">Drinking water nearby<#break>
  <#case "28">Public restrooms nearby<#break>
  <#case "29">Telephone nearby<#break>
  <#case "30">Picnic tables nearby<#break>
  <#case "31">Camping available<#break>
  <#case "32">Bicycles<#break>
  <#case "33">Motorcycles<#break>
  <#case "34">Quads<#break>
  <#case "35">Off-road vehicles<#break>
  <#case "36">Snowmobiles<#break>
  <#case "37">Horses<#break>
  <#case "38">Campfires<#break>
  <#case "39">Thorns<#break>
  <#case "40">Stealth required<#break>
  <#case "41">Stroller accessible<#break>
  <#case "42">Needs Maintenance<#break>
  <#case "43">Watch for livestock<#break>
  <#case "44">Flashlight required<#break>
  <#case "45">Lost And Found Tour<#break>
  <#case "46">Truck Driver/RV<#break>
  <#case "47">Field Puzzle<#break>
  <#case "48">UV Light Required<#break>
  <#case "49">Snowshoes<#break>
  <#case "50">Cross Country Skis<#break>
  <#case "51">Special Tool Required<#break>
  <#case "52">Night Cache<#break>
  <#case "53">Park and Grab<#break>
  <#case "54">Abandoned Structure<#break>
  <#case "55">Short hike (less than 1km)<#break>
  <#case "56">Medium hike (1km-10km)<#break>
  <#case "57">Long Hike (+10km)<#break>
  <#case "58">Fuel Nearby<#break>
  <#case "59">Food Nearby<#break>
  <#case "60">Wireless Beacon<#break>
  <#case "61">Partnership Cache<#break>
  <#case "62">Seasonal Access<#break>
  <#case "63">Tourist Friendly<#break>
  <#case "64">Tree Climbing<#break>
  <#case "65">Front Yard (Private Residence)<#break>
  <#case "66">Teamwork Required<#break>
</#switch>
</#macro>

<#macro attrString text>
  <#list text?split(",") as attrValue>
    <#if attrValue?starts_with("0-")>No <#else>Yes </#if><#t>
    <@attr value=attrValue[2..] />, <#t>
  </#list>
</#macro>

<#assign cacheQuery = "
select ca.Code, ca.Name, toUtf8(ca.SmartName) as SmartName, ca.Latitude, ca.Longitude, ca.CacheType,
ca.Elevation, ca.Difficulty, ca.Terrain, ca.PlacedBy, ca.PlacedDate, ca.LastFoundDate,
ca.Guid, ca.CacheId, ca.OwnerId, ca.OwnerName, ca.Container, ca.County, ca.Country, ca.State, ca.Distance,
cm.LongDescription, cm.ShortDescription, ca.ShortHtm, ca.LongHtm, cm.Hints, cm.UserNote,
cu.GefundenVon, cu.GCV_AverageVote, cu.FavRatio, cu.AvgLogsPerYear, cu.MeinKommentar,
group_concat(at.aInc || '-' || at.aId) as Attributes, ca.Bearing
from Caches ca
join Custom cu on ca.code = cu.cCode
join CacheMemo cm on ca.code=cm.Code
left join Attributes at on ca.Code = at.aCode and at.aId not in (1,2,6,17,18,19,20,21,22,23,26,27,28,29,30,31,37,38,43,46,58,59,63)
where ${where}
group by ca.Code
order by round(sqrt(ca.Distance)), ca.Degrees
limit 50000;
">

<#assign logQuery = "
select lo.lType, lo.lBy, lo.lDate, lo.lLogId, lo.lTime, lo.lownerid, lm.lText
from Logs lo
join LogMemo lm on lo.lLogId=lm.lLogId and lo.lParent=lm.lParent
where lo.lParent = '{CODE}'
and length(lm.lText) > 25
order by lo.lDate desc
limit 15
">

<?xml version="1.0" encoding="${encoding}"?>
<gpx xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    version="1.0"
    creator="Markus Bubendorf"
    xsi:schemaLocation="http://www.topografix.com/GPX/1/0 http://www.topografix.com/GPX/1/0/gpx.xsd http://www.groundspeak.com/cache/1/0/1 http://www.groundspeak.com/cache/1/0/1/cache.xsd"
    xmlns="http://www.topografix.com/GPX/1/0">
    <desc>Geocache file generated by gsak2gpx</desc>
    <author>Markus Bubendorf</author>
    <email>markus@bubendorf.ch</email>
    <time>${datetime}</time>
    <keywords>cache, geocache, groundspeak</keywords>
    <bounds minlat="0" minlon="-45" maxlat="80" maxlon="45"/>

<#list sql('${cacheQuery}', '${category}') as ca>
    <wpt lat="${ca.Latitude}" lon="${ca.Longitude}">
        <ele>${ca.Elevation?c}</ele>
        <time>${ca.PlacedDate}</time>
        <name>${ca.Code}</name>
        <desc>${ca.SmartName}</desc>
        <urlname>${ca.Name} by ${ca.PlacedBy}</urlname>
        <sym>Geocache</sym>
        <type>Geocache|<@CacheType type=ca.CacheType/></type>
        <groundspeak:cache id="${ca.CacheId}" <#-- available="<@truefalse bool=ca.TempDisabled/>" archived="<@truefalse bool=ca.Archived/>" --> xmlns:groundspeak="http://www.groundspeak.com/cache/1/0/1">
            <groundspeak:name>${ca.SmartName}</groundspeak:name>
            <groundspeak:placed_by>${ca.PlacedBy}</groundspeak:placed_by>
            <groundspeak:owner id="${ca.OwnerId}">${ca.OwnerName}</groundspeak:owner>
            <groundspeak:type><@CacheType type=ca.CacheType/></groundspeak:type>
            <groundspeak:container>${ca.Container}</groundspeak:container>
            <groundspeak:difficulty>${ca.Difficulty?c}</groundspeak:difficulty>
            <groundspeak:terrain>${ca.Terrain?c}</groundspeak:terrain>
            <groundspeak:country>${ca.Country}</groundspeak:country>
            <groundspeak:state>${ca.State}</groundspeak:state>
            <groundspeak:short_description html="false" >${ca.ShortDescription?replace('\\<.*?>', '', 'r')}</groundspeak:short_description>
            <groundspeak:long_description html="false">${ca.LongDescription?replace('\\<.*?>', '', 'r')}</groundspeak:long_description>
            <groundspeak:encoded_hints>${ca.Hints}
<#if (ca.UserNote?length > 0)>&lt;br/&gt; *** ${ca.UserNote}</#if><#t></groundspeak:encoded_hints>
            <groundspeak:logs>
              <groundspeak:log id="-3">
                <groundspeak:type>Write note</groundspeak:type>
                <groundspeak:text encoded="False">
<#if (ca.GefundenVon?length > 0)>GefundenVon: ${ca.GefundenVon}
&lt;br/&gt;</#if><#t>
<#if (ca.LastFoundDate?length > 0)>Letzter Fund: ${ca.LastFoundDate?string["d.M.yy"]}
&lt;br/&gt;</#if><#t>
<#if (ca.Hints?length > 0)>Hinweis: ${ca.Hints}
&lt;br/&gt;</#if><#t>
<#if (ca.Elevation != 0)>HÃ¶he: ${ca.Elevation}
&lt;br/&gt;</#if><#t>
<#if (ca.County?length > 0)>Ort: ${ca.County}
&lt;br/&gt;</#if><#t>
<#if (ca.GCV_AverageVote > 0)>GCVote: ${ca.GCV_AverageVote}
&lt;br/&gt;</#if><#t>
<#if (ca.FavRatio > 0)>FavRatio: ${ca.FavRatio}
&lt;br/&gt;</#if><#t>
<#if (ca.AvgLogsPerYear > 0)>AvgLosPerYear: ${ca.AvgLogsPerYear}
&lt;br/&gt;</#if><#t>
<#if (ca.UserNote?length > 0)>UserNote: ${ca.UserNote}
&lt;br/&gt;</#if><#t>
<#if (ca.MeinKommentar?length > 0)>Kommentar: ${ca.MeinKommentar}
&lt;br/&gt;</#if><#t>
<#if (ca.Attributes?length > 0)>Attribute: <@attrString text=ca.Attributes/>
&lt;br/&gt;</#if><#t>
                </groundspeak:text>
              </groundspeak:log>
            <#list sql('${logQuery?replace("{CODE}", ca.Code)}') as log>
              <groundspeak:log id="${log.lLogId?c}">
                <groundspeak:date>${log.lDate?string["yyyy-MM-dd"]}T${log.lTime}</groundspeak:date>
                <groundspeak:type>${log.lType}</groundspeak:type>
                <groundspeak:finder id="${log.lownerid?c}">${log.lBy}</groundspeak:finder>
                <groundspeak:text encoded="False">
				    <#if (log.lText?length > 1000)>
					   ...${log.lText[log.lText?length-1000..]?replace('\\<.*?>', '', 'r')}
					<#else>
					   ${log.lText?replace('\\<.*?>', '', 'r')}
					</#if>
				</groundspeak:text>
              </groundspeak:log>
            </#list>
            </groundspeak:logs>
        </groundspeak:cache>
    </wpt>
</#list>
</gpx>
